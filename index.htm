<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<title>cmail: Overview</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<link rel="icon" href="static/cmail_logo.png" type="image/x-icon" />
		<link rel="shortcut icon" href="static/cmail_logo.png" type="image/x-icon" />
		<link rel="stylesheet" type="text/css" href="static/cmail.css" />
		<meta name="description" content="cmail - Internet mail processing suite with SQLite backend" />
		<meta name="keywords" content="cmail, smtp, email, pop, webmail, messaging" />
		<meta name="robots" content="index,follow" />
	</head>
	<body>

		<div>
			<h1>cmail</h1>
			<h3>Internet mail processing suite with SQLite backend</h3>
			cmail is an implementation of multiple protocols to fulfill most, if not all
			functions commonly expected in internet message exchange - commonly known as
			&quot;mail server&quot;.
		</div>

		<div>
			  Architecturally, cmail is split into several modules which interface through
			  a central SQLite database (the master database).
			  <ul>
				  <li><a href="api.htm">cmail-api</a>			<i>HTTP API to the master database</i></li>
				  <li><a href="msa.htm">cmail-msa</a>			<i>SMTP server (Accept incoming / originated mails)</i></li>
				  <li><a href="popd.htm">cmail-popd</a>			<i>POP server (Access mailboxes via POP)</i></li>
				  <li><a href="imapd.htm">cmail-imapd</a>		<i>IMAP server (Access mailboxes via IMAP)</i></li>
				  <li><a href="mta.htm">cmail-mta</a>			<i>SMTP client (Delivers outgoing mails to remote servers)</i></li>
				  <li><a href="webadmin.htm">cmail-webadmin</a>		<i>HTTP Administration interface</i></li>
				  <li><a href="webmailer.htm">cmail-webmailer</a>	<i>Web mailer interface</i></li>
			  </ul>
		</div>

		<div>
			<h2>Development Rationale</h2>
			cmail was started out of resignation over the complexity involved in configuring and running
			many other MTAs. As such, the configuration file format is relatively simple and only affects
			the specifics of the module it is written for. For the most part the configuration files consist
			of directives specifying on which ports the module should provide its service.

			<p>
			The common configuration, such as local addresses, routing decisions and user data are kept in
			the master database. This provides flexibility of reconfiguration without restarting the modules,
			as well as allowing for the use of a variety of interfaces to configure the server, such as the
			provided Web Panel or an SQLite database editor.
			</p>
			<p>
			cmail was intentionally kept simple in terms of configuration as well as features. It might not
			support some features experienced administrators may be accustomed to, for example in large-scale
		       	deployments, out-of-the-box but most of it can be enabled or emulated with sufficient thought.
			</p>
			<p>
			Should that not be enough, cmail provides an internal API for modifying its behaviour with 
			runtime-loaded shared libraries (plugins).
			</p>
			If cmail still does not meet your expectations after that, you might be better of using another
			MTA :)
		</div>

		<div>
			<h2>Common use cases</h2>
			
			<h3>Receive-only server, mail is sent via external servers</h3>
			The following modules are involved
			<ul>
				<li>cmail-msa for receiving incoming mail</li>
				<li>cmail-popd or cmail-imapd for access to mailboxes</li>
				<li>Optionally: cmail-api and cmail-webadmin for easier administration</li>
				<li>Optionally: cmail-api and cmail-webmailer for web access to mailboxes</li>
			</ul>

			<h3>Send-only server</h3>
			This use case might be better served by nullmailer. Should you chose to want to implement
			it using cmail, you'd need
			<ul>
				<li>cmail-msa for accepting originated mail</li>
				<li>cmail-mta for delivering the outbound mail</li>
				<li>Optionally: cmail-api and cmail-webadmin for easier administration</li>
			</ul>

			<h3>Full-feature send- and receive-server</h3>
			This setup involves the following modules
			<ul>
				<li>cmail-msa for receiving incoming mail</li>
				<li>cmail-popd and/or cmail-imapd for access to mailboxes</li>
				<li>cmail-mta for delivering the outbound mail</li>
				<li>Optionally: cmail-api and cmail-webadmin for easier administration</li>
				<li>Optionally: cmail-api and cmail-webmailer for web access to mailboxes</li>
			</ul>
		</div>

		<div>
			<h2>Contributing</h2>

		</div>

		<div>
			<h2>Resources</h2>
			<ul>
				<li>The Github organisation of the cmail project: <a href="https://github.com/cmail-mta/">cmail-mta</a></li>
				<li>git repository: <i>git clone</i> <a href="http://git.services.cbcdn.com/cmail">http://git.services.cbcdn.com/cmail</a></li>
				<li>Contrib git repository: <i>git clone</i> <a href="http://git.services.cbcdn.com/cmail-contrib">http://git.services.cbcdn.com/cmail-contrib</a></li>
			</ul>
		</div>
	</body>
</html>
